3. Branching Instructions in C++ Programming Language
The main branching instructions (or control flow statements) in C++ are:
if statement
else if statement
else statement
switch statement
goto statement (rarely used)

4. Characteristics of Each Branching Instruction
1. if Statement:
The if statement evaluates a condition, and if it is true, the code block inside it executes.
Syntax:
if (condition) {
    // code to execute if condition is true
}
2. else if Statement:
Used after an if to check multiple conditions. If the previous if condition is false, the else if condition is checked.
Syntax:
if (condition1) {
    // code to execute if condition1 is true
} else if (condition2) {
    // code to execute if condition2 is true
}

3. else Statement:
The else block is executed if all preceding if and else if conditions are false.
Syntax:
if (condition) {
    // code if condition is true
} else {
    // code if all conditions are false
}

4. switch Statement:
The switch statement allows branching based on the value of a variable. It's often used when a single variable can take multiple discrete values.
Syntax:
switch (expression) {
    case value1:
        // code to execute if expression == value1
        break;
    case value2:
        // code to execute if expression == value2
        break;
    default:
        // code to execute if none of the cases match
}

The break statement is crucial to prevent fall-through (where the program continues to execute subsequent cases even if a match is found).
5. goto Statement:
The goto statement provides unconditional jumps to another point in the code. Its use is discouraged as it makes the program harder to read and debug.
Syntax:
goto label;
...
label:
 // code to jump to

