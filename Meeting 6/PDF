Student Average Calculation Program
Indra Dipanegara Tan - 22/497954/PA/214568

Introduction
The goal of this project was to design and implement a C++ program that collects and processes student data, calculates averages for scores, and displays the results. The program uses a combination of structures, arrays, and basic I/O to handle multiple student records efficiently. Additionally, a Makefile was created to simplify the build process.

Objectives
Collect data for multiple students, including:
Student ID (NIM).
Mid-term exam score (UTS).
Final exam score (UAS).
Compute the average score for each student.
Display the results in a structured format.
Use a Makefile to manage the compilation process efficiently.
Program Design
1. Data Structures
The program utilizes a struct named Student to organize data for each student. The struct contains the following fields:
nim: The unique identifier for the student.
uts: The mid-term exam score.
uas: The final exam score.
average: The computed average of the UTS and UAS scores.
An array of Student structs is used to handle multiple student records, with a maximum capacity of 50 students.
2. Input and Processing
The user specifies the number of students (n), which is validated to ensure it is within the allowed range (1 to 50).
For each student, the program prompts the user to enter the nim, uts, and uas scores.
The average is calculated using the formula: average=UTS+UAS2\text{average} = \frac{\text{UTS} + \text{UAS}}{2}average=2UTS+UASâ€‹
3. Output
The program displays the nim and the calculated average for each student, formatted to two decimal places for clarity.
Conclusion
The program's core functionality, calculating and displaying the average scores, serves as a strong foundation for learning how to design, implement, and manage structured programs in C++, making it an excellent example of fundamental software development principles.
